---
import Layout from '~/layouts/PageLayout.astro';
import HeroText from '~/components/widgets/HeroText.astro';

const metadata = {
  title: 'Contact',
};
---

<Layout metadata={metadata}>
  <!-- HeroText Widget -->
  <HeroText tagline="Contact" title="Let's Connect!" />

  <!-- Form Container -->
  <div class="max-w-2xl mx-auto p-6 bg-white shadow-lg rounded-lg border mb-16">
    <div id="hs-form-container"></div>

    <script is:inline>
      /**
       * Dynamically loads the HubSpot form script into the page.
       * Ensures proper initialization without duplicates.
       * @param {Function} callback - Function to call after the script is loaded.
       */
      function loadHubSpotScript(callback) {
        const existingScript = document.querySelector('script[src="//js.hsforms.net/forms/embed/v2.js"]');

        // If the script exists but hasn't fully loaded, attach the callback
        if (existingScript && !existingScript.onload) {
          existingScript.onload = callback;
          return;
        }

        // If the script exists and is ready, execute the callback
        if (existingScript && existingScript.readyState === 'complete') {
          callback();
          return;
        }

        // Otherwise, create and append a new script
        const script = document.createElement('script');
        script.src = '//js.hsforms.net/forms/embed/v2.js';
        script.type = 'text/javascript';
        script.async = true;
        script.onload = callback;
        document.body.appendChild(script);
      }

      /**
       * Initializes the HubSpot form in the target container.
       * Handles retries until the HubSpot library is fully ready.
       */
      function initializeHubSpotForm() {
        if (window.hbspt && typeof hbspt.forms.create === 'function') {
          hbspt.forms.create({
            portalId: '48173210', // Replace with your portal ID
            formId: '6cc6def1-a379-4155-afd6-829bdaa9aa9d', // Replace with your form ID
            target: '#hs-form-container',
          });
        } else {
          // Retry with exponential backoff
          console.warn('HubSpot library not ready. Retrying...');
          setTimeout(initializeHubSpotForm, 500);
        }
      }

      /**
       * Ensures the HubSpot form is initialized correctly on initial load
       * and after Astro's SPA transitions.
       */
      function setupHubSpotForm() {
        loadHubSpotScript(initializeHubSpotForm);
      }

      // Event listener for Astro SPA transitions
      document.addEventListener('astro:after-swap', () => {
        console.log('Astro SPA transition detected. Reinitializing HubSpot form...');
        setupHubSpotForm();
      });

      // Event listener for the initial page load
      document.addEventListener('DOMContentLoaded', () => {
        console.log('Initial page load. Initializing HubSpot form...');
        setupHubSpotForm();
      });

      // Fallback to ensure the form initializes even if both events are missed
      if (document.readyState === 'complete' || document.readyState === 'interactive') {
        console.log('Fallback initialization. Ensuring HubSpot form loads...');
        setupHubSpotForm();
      }
    </script>
  </div>
</Layout>
